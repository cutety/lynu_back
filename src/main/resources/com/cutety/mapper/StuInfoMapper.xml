<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cutety.mapper.StuInfoMapper">
  <resultMap id="BaseResultMap" type="com.cutety.entity.StuInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="stu_id" jdbcType="VARCHAR" property="stuId" />
    <result column="stu_name" jdbcType="VARCHAR" property="stuName" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="polical_status" jdbcType="VARCHAR" property="policalStatus" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="candidate_category" jdbcType="VARCHAR" property="candidateCategory" />
    <result column="graduated_school" jdbcType="VARCHAR" property="graduatedSchool" />
    <result column="candidate_characteristics" jdbcType="VARCHAR" property="candidateCharacteristics" />
    <result column="candidate_household_registry" jdbcType="VARCHAR" property="candidateHouseholdRegistry" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="candidate_result" jdbcType="INTEGER" property="candidateResult" />
  </resultMap>
  <resultMap id="StuInfoTable" type="com.cutety.entity.StuInfo">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="stu_id" jdbcType="VARCHAR" property="stuId"/>
    <result column="stu_name" jdbcType="VARCHAR" property="stuName"/>
    <association property="ApplyInfo" javaType="com.cutety.entity.ApplyInfo">
      <id column="id" javaType="INTEGER" property="id"/>
      <result column="admission_major" jdbcType="VARCHAR" property="admissionMajor"/>
    </association>
  </resultMap>

  <select id="getStuHouseholdRegistry" resultType="java.util.LinkedHashMap" parameterType="java.lang.String">
    select
    candidate_household_registry as name,
    count(candidate_household_registry) as value,
    adcode as cityCode
    from stu_info
    where grade = #{year,jdbcType=VARCHAR}
    group by candidate_household_registry
    order by value desc
  </select>

  <select id="getStuProvince" resultType="java.util.LinkedHashMap" parameterType="java.lang.String">
    SELECT CASE
    WHEN adcode >= '110000' AND adcode &lt; '120000' THEN '北京'
    WHEN adcode >= '120000' AND adcode &lt; '130000' THEN '天津'
    WHEN adcode >= '130000' AND adcode &lt; '140000' THEN '河北'
    WHEN adcode >= '140000' AND adcode &lt; '150000' THEN '山西'
    WHEN adcode >= '150000' AND adcode &lt; '210000' THEN '内蒙古'
    WHEN adcode >= '210000' AND adcode &lt; '220000' THEN '辽宁'
    WHEN adcode >= '220000' AND adcode &lt; '230000' THEN '吉林'
    WHEN adcode >= '230000' AND adcode &lt; '310000' THEN '黑龙江'
    WHEN adcode >= '310000' AND adcode &lt; '320000' THEN '上海'
    WHEN adcode >= '320000' AND adcode &lt; '330000' THEN '江苏'
    WHEN adcode >= '330000' AND adcode &lt; '340000' THEN '浙江'
    WHEN adcode >= '340000' AND adcode &lt; '350000' THEN '安徽'
    WHEN adcode >= '350000' AND adcode &lt; '360000' THEN '福建'
    WHEN adcode >= '360000' AND adcode &lt; '370000' THEN '江西'
    WHEN adcode >= '370000' AND adcode &lt; '410000' THEN '山东'
    WHEN adcode >= '410000' AND adcode &lt; '420000' THEN '河南'
    WHEN adcode >= '420000' AND adcode &lt; '430000' THEN '湖北'
    WHEN adcode >= '430000' AND adcode &lt; '440000' THEN '湖南'
    WHEN adcode >= '440000' AND adcode &lt; '450000' THEN '广东'
    WHEN adcode >= '450000' AND adcode &lt; '460000' THEN '广西'
    WHEN adcode >= '460000' AND adcode &lt; '500000' THEN '海南'
    WHEN adcode >= '500000' AND adcode &lt; '510000' THEN '重庆'
    WHEN adcode >= '510000' AND adcode &lt; '520000' THEN '四川'
    WHEN adcode >= '520000' AND adcode &lt; '530000' THEN '贵州'
    WHEN adcode >= '530000' AND adcode &lt; '540000' THEN '云南'
    WHEN adcode >= '540000' AND adcode &lt; '610000' THEN '西藏'
    WHEN adcode >= '610000' AND adcode &lt; '620000' THEN '陕西'
    WHEN adcode >= '620000' AND adcode &lt; '630000' THEN '甘肃'
    WHEN adcode >= '630000' AND adcode &lt; '640000' THEN '青海'
    WHEN adcode >= '640000' AND adcode &lt; '650000' THEN '宁夏'
    WHEN adcode >= '650000' AND adcode &lt; '710000' THEN '新疆'
    WHEN adcode >= '710000' AND adcode &lt; '810000' THEN '台湾'
    WHEN adcode >= '810000' AND adcode &lt; '820000' THEN '香港'
    WHEN adcode >= '820000' THEN '澳门'
    END AS name,
    COUNT(*) AS value
    FROM stu_info
    where grade = #{grade,jdbcType=VARCHAR}
    GROUP BY name
  </select>

  <select id="getStuInfoTable" resultType="java.util.LinkedHashMap" parameterType="java.lang.String">
      SELECT
      stu_info.stu_name,
      stu_info.stu_id,
      apply_info.admission_major
      from stu_info
      LEFT JOIN apply_info
      on stu_info.stu_id = apply_info.stu_id
      where stu_info.grade = #{year,jdbcType=VARCHAR}
  </select>

  <select id="getFirstname" resultType="java.util.LinkedHashMap" parameterType="java.lang.String">
    SELECT
      COUNT(*) value,
      name
    FROM (
           SELECT
             left(stu_name,1 ) name
           FROM
             stu_info
           where grade = #{year,jdbcType=VARCHAR}
         ) t
    GROUP BY name
    ORDER BY value DESC
  </select>

  <select id="getSameName" resultType="java.util.LinkedHashMap" parameterType="java.lang.String">
    SELECT
        COUNT(*) value,
        stu_name as name
    FROM stu_info
    WHERE grade = #{year,jdbcType=VARCHAR}
    GROUP BY name
    ORDER BY value DESC
  </select>
  <select id="getAgeDistribution" resultType="hashmap" parameterType="java.lang.String">
     SELECT TIMESTAMPDIFF(year, birthday, curdate()) as age,
           COUNT(*) amount
     FROM stu_info
     WHERE birthday != '0000-0-0'
     and grade = #{year,jdbcType=VARCHAR}
     GROUP BY age
     ORDER BY age ASC
  </select>
  <select id="getSameBirthday" resultType="java.util.LinkedHashMap" parameterType="java.lang.String">
    SELECT
      COUNT(*) value,
      right(birthday,5) name
    FROM stu_info
    WHERE birthday != 0000-0-0
      and grade = '20'
    GROUP BY name
    HAVING value > 3
    ORDER BY name ASC
  </select>

  <sql id="Base_Column_List">
    id, stu_id, stu_name, gender, birthday, polical_status, nation, candidate_category, 
    graduated_school, candidate_characteristics, candidate_household_registry, address, 
    candidate_result
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from stu_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from stu_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cutety.entity.StuInfo">
    insert into stu_info (id, stu_id, stu_name, 
      gender, birthday, polical_status, 
      nation, candidate_category, graduated_school, 
      candidate_characteristics, candidate_household_registry, 
      address, candidate_result)
    values (#{id,jdbcType=INTEGER}, #{stuId,jdbcType=VARCHAR}, #{stuName,jdbcType=VARCHAR}, 
      #{gender,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{policalStatus,jdbcType=VARCHAR}, 
      #{nation,jdbcType=VARCHAR}, #{candidateCategory,jdbcType=VARCHAR}, #{graduatedSchool,jdbcType=VARCHAR}, 
      #{candidateCharacteristics,jdbcType=VARCHAR}, #{candidateHouseholdRegistry,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{candidateResult,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cutety.entity.StuInfo">
    insert into stu_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="stuName != null">
        stu_name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="policalStatus != null">
        polical_status,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="candidateCategory != null">
        candidate_category,
      </if>
      <if test="graduatedSchool != null">
        graduated_school,
      </if>
      <if test="candidateCharacteristics != null">
        candidate_characteristics,
      </if>
      <if test="candidateHouseholdRegistry != null">
        candidate_household_registry,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="candidateResult != null">
        candidate_result,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stuId != null">
        #{stuId,jdbcType=VARCHAR},
      </if>
      <if test="stuName != null">
        #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="policalStatus != null">
        #{policalStatus,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="candidateCategory != null">
        #{candidateCategory,jdbcType=VARCHAR},
      </if>
      <if test="graduatedSchool != null">
        #{graduatedSchool,jdbcType=VARCHAR},
      </if>
      <if test="candidateCharacteristics != null">
        #{candidateCharacteristics,jdbcType=VARCHAR},
      </if>
      <if test="candidateHouseholdRegistry != null">
        #{candidateHouseholdRegistry,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="candidateResult != null">
        #{candidateResult,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cutety.entity.StuInfo">
    update stu_info
    <set>
      <if test="stuId != null">
        stu_id = #{stuId,jdbcType=VARCHAR},
      </if>
      <if test="stuName != null">
        stu_name = #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="policalStatus != null">
        polical_status = #{policalStatus,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="candidateCategory != null">
        candidate_category = #{candidateCategory,jdbcType=VARCHAR},
      </if>
      <if test="graduatedSchool != null">
        graduated_school = #{graduatedSchool,jdbcType=VARCHAR},
      </if>
      <if test="candidateCharacteristics != null">
        candidate_characteristics = #{candidateCharacteristics,jdbcType=VARCHAR},
      </if>
      <if test="candidateHouseholdRegistry != null">
        candidate_household_registry = #{candidateHouseholdRegistry,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="candidateResult != null">
        candidate_result = #{candidateResult,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cutety.entity.StuInfo">
    update stu_info
    set stu_id = #{stuId,jdbcType=VARCHAR},
      stu_name = #{stuName,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      polical_status = #{policalStatus,jdbcType=VARCHAR},
      nation = #{nation,jdbcType=VARCHAR},
      candidate_category = #{candidateCategory,jdbcType=VARCHAR},
      graduated_school = #{graduatedSchool,jdbcType=VARCHAR},
      candidate_characteristics = #{candidateCharacteristics,jdbcType=VARCHAR},
      candidate_household_registry = #{candidateHouseholdRegistry,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      candidate_result = #{candidateResult,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>